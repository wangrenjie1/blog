{"version":3,"sources":["components/HtmlBasic.js","components/JsBasic.js","index.js"],"names":["Header","Footer","Content","Sider","HtmlBasic","react_default","a","createElement","layout","style","marginLeft","background","padding","paddingLeft","fontSize","fontWeight","margin","overflow","backgroundColor","height","overflowY","timeline","Item","className","react_markdown_default","source","textAlign","Component","JsBasic_Header","JsBasic_Content","JsBasic_Footer","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","catalogue","BrowserRouter","basename","src_Sider","position","left","menu","theme","mode","Link","to","icon","type","Switch","Route","path","component","JsBasic","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f002f03.chunk.js","sourcesContent":["import React,{Component } from 'react';\r\nimport Code from 'react-markdown';\r\nimport {\r\n    Layout,\r\n    Menu,\r\n    Icon,\r\n    Timeline\r\n} from 'antd';\r\nconst {\r\n    Header, Footer, Sider, Content,\r\n  } = Layout;\r\nclass  HtmlBasic extends Component {\r\n    render(){\r\n        return (\r\n            <Layout style={{marginLeft:200}}>\r\n                <Header style={{ background: '#fff', padding: 0,paddingLeft:20 ,fontSize:20,fontWeight:900}} >\r\n                    <h2> HTML基础</h2>\r\n                </Header>\r\n                <Content style={{ margin: '24px 16px 0', overflow: 'inherit'}}>\r\n                    <div style={{padding:24,backgroundColor:'#fff',height: ' calc(100vh - 160px)',overflowY:'auto'}}>\r\n                        <Timeline>\r\n                            <Timeline.Item>\r\n                                <h3>什么是html</h3>\r\n                                <p>超文本标记语言（HyperText Markup language）,是 网页浏览器中看到展示信息 设计的一种标记语言</p>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                <h3>Doctype含义</h3>\r\n                                <p>声明位于位于HTML文档中的第一行，告诉浏览器的解释器用什么文档标准来解析这个文档。</p>\r\n                                <p>DOCTYPE书写错误或者不存在会导致文档已兼容模式呈现。</p>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                <h3>标准模式和混杂模式</h3>\r\n                                <p>标准模式：html排版和js渲染工作模式都是以该浏览器支持的最高标准运行。</p>\r\n                                <p>兼容模式：页面已宽松的向后兼容的方式显示，模拟老浏览器的行为。</p>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                <h3>HTML5 为什么只需要写\" &lt;!DOCTYPE HTML&gt;\"</h3>\r\n                                <p> html5不是基于SGML,所以不需要对DTD进行引用，但是它需要对文档类型声明，需要doctype来规范浏览器行为。</p>\r\n                                <p className=\"annotation\">\r\n                                SGML是指“标准通用标记语言”(Standard Generalized Markup Language), 是1986年出版发布的一个信息管理方面的国际标准(ISO 8879)，它是国际上定义电子文件结构和内容描述的标准，是一种非常复杂的文档的结构，主要用于大量高度结构化数据的防卫区和其他各种工业领域，利于分类和索引。SGML规定了在文档中嵌入描述标记的标准格式，指定了描述文档结构的标准方法，目前在WEB上使用的HTML格式便是使用固定标签集的一种SGML文档。由于SGML可以支持无数的文档结构类型，并且可以创建与特定的软硬件无关的文档，因此很容易与使用不同计算机系统的用户交换文档。同XML相比，定义的功能很强大，缺点是它不适用于Web数据描述，而且SGML软件价格非常价格昂贵！\r\n                                </p>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                    <h3>行内元素-块级元素-空元素</h3>\r\n                                    <p>css中规定每个元素都有默认的display属性和值 ：</p>\r\n                                    <ul>\r\n                                        <li>该元素的属性的值为‘inline’的则为行内元素（如:span,a img,input等）</li>\r\n                                        <li>该元素的属性的值为‘block’的则为块级元素（div，ul,li h1...p等）</li>\r\n                                        <li>空（void）元素 &lt;br> &lt;hr> &lt;img>&lt;input> &lt;link>&lt;meta> 等</li>\r\n                                    </ul>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                <p>html语义化</p>\r\n                                <ol>\r\n                                    <li>定义：正确的标签做正确的事情</li>\r\n                                    <li>为什么要做语义化\r\n                                        <ul>\r\n                                            <li>有利于SEO，有利于搜索引擎爬虫更好的理解我们的网页，从而获取更多的有效信息，提升网页的权重。</li>\r\n                                            <li>在没有CSS的时候能够清晰的看出网页的结构，增强可读性，便于团队开发和维护。</li>\r\n                                            <li>支持多终端设备的浏览器渲染。</li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li>SEO\r\n                                        <ul>\r\n                                            <li>汉译为搜索引擎优化。是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。</li>\r\n                                            <li>目的： 为网站提供生态式的自我营销解决方案，让其在行业内占据领先地位，获得品牌收益；SEO包含站外SEO和站内SEO两方面；为了从搜索引擎中获得更多的免费流量，从网站结构、内容建设方案、用户互动传播、页面等角度进行合理规划，还会使搜索引擎中显示的网站相关信息对用户来说更具有吸引力。</li>\r\n                                            <li>优化方式：\r\n                                                <ul>\r\n                                                    <li>内部优化：\r\n                                                        <p>a.META标签优化：例如：TITLE，KEYWORDS，DESCRIPTION等的优化。</p>\r\n                                                        <p>b.内部链接的优化，包括相关性链接（Tag标签），锚文本链接，各导航链接，及图片链接。</p>\r\n                                                        <p>c.网站内容更新：每天保持站内的更新(主要是文章的更新等)。</p>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        外部优化：\r\n                                                        <p>a.外部链接类别：友情链接、博客、论坛、B2B、新闻、分类信息、贴吧、知道、百科、站群、相关信息网等尽量保持链接的多样性。</p>\r\n                                                        <p>b.外链运营：每天添加一定数量的外部链接，使关键词排名稳定提升。</p>\r\n                                                        <p>c.外链选择：与一些和你网站相关性比较高,整体质量比较好的网站交换友情链接,巩固稳定关键词排名。</p>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ol>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                    <h3>同源策略</h3>\r\n                                    <ol>\r\n                                        <li>概念：域名、协议、端口（80端口可省略不写）都相同。内部表单不受此限制</li>\r\n                                        <li>目的：保证用户信息安全，防止恶意网站窃取数据，防止cookie共享</li>\r\n                                        <li>同源策略限制对象：\r\n                                            <ul>\r\n                                                <li>cookie、localStorage、indexedDB无法读取</li>\r\n                                                <li>dom 无法获取</li>\r\n                                                <li>ajax不能发送</li>\r\n                                            </ul>\r\n                                        </li>\r\n                                        <li>如何设置同源策略\r\n                                            <ol>\r\n                                                <li>在  test.xxx.com\ta.html   设置：\r\n                                                    <pre>\r\n                                                        document.domain = \"xxx.com\"//设置同源策略 <br/>\r\n                                                        document.cookie = \"test1=hello\"\r\n                                                    </pre>\r\n                                                </li>\r\n                                                <li>在 test2.xxx.com\tb.html 设置：\r\n                                                    <pre>\r\n                                                        document.cookie  //取得 a.html 中的test1\r\n                                                    </pre>\r\n                                                </li>\r\n                                            </ol>\r\n                                        </li>\r\n                                        <li>前端跨域的几种方式\r\n                                            <ol>\r\n                                                <li>img标签</li>\r\n                                                <li>iframe标签</li>\r\n                                                <li>script标签</li>\r\n                                                <li>link标签  background属性的 url </li>\r\n                                                <li>Jsonp:\r\n                                                    <p>原理：网页添加一个&lt;script>元素，向服务器请求JSON数据。服务器收到请求后，将数据放在一个指定名字的回调函数里传回来。</p>\r\n                                                    <ul>\r\n                                                        <li>缺点只支持get请求</li>\r\n                                                        <li>优点简单方便，易理解，兼容性良好</li>\r\n                                                        <li>代码如下\r\n                                                            <Code source=\"\r\n                                                            ```js\r\n                                                             //动态创建script，用于跨越操作\r\n                                                             function creatScriptTag(src) {\r\n                                                               var script = document.createElement('script');\r\n                                                               script.setAttribute('type','text/javascript');\r\n                                                               script.src = src;\r\n                                                               document.body.appendChild(script);\r\n                                                             }\r\n                                                             // 调用creatScriptTag函数\r\n                                                             window.onload = function () {\r\n                                                               var url = '/index.php?jsoncallback=result';\r\n                                                               creatScriptTag(url);\r\n                                                             }\r\n                                                             // 定义回调函数\r\n                                                             function result (data) {\r\n                                                               console.log(data);\r\n                                                             } \r\n                                                            ```\r\n                                                            \">\r\n                                                            </Code> \r\n                                                            <Code source=\"\r\n                                                                ```js\r\n                                                                // index.php \r\n                                                                <?php\r\n                                                                header('Content-type: application/json');\r\n                                                                //获取回调函数名\r\n                                                                $jsoncallback = htmlspecialchars($_REQUEST ['jsoncallback']);\r\n                                                                //取数据\r\n                                                                $data = [\r\n                                                                  'data'=>'123',\r\n                                                                ];\r\n                                                                $json_data = json_encode(array('code'=>'200','msg'=>'请求成功','data' => $data),JSON_UNESCAPED_UNICODE);\r\n                                                                //输出jsonp格式的数据\r\n                                                                echo $jsoncallback .'(' . $json_data . ')';\r\n                                                                ?>\r\n                                                                ```\r\n                                                            \"></Code>  \r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </li>\r\n                                                <li>WebSocket:是一种通信协议，使用ws://（非加密）和wss://（加密）作为协议前缀。该协议不实行同源政策，只要服务器设置利用origin字段设置白名单，就可以通过它进行跨源通信。</li>\r\n                                                <li>CORS（Cross-Origin Resource Sharing） 通用方式  需要后台配合\r\n                                                    <ul>\r\n                                                        <li>在请求头信息中增加Origin字段，用来说明此次请求来自那个源（协议+域名+端口），此字段可以设置相应白名单</li>\r\n                                                        <li>必须设置Access-Control-Allow-Origin字段，值要求是Origin字段的值或者是*，*的意思是接受任意域名的请求</li>\r\n                                                        <li>CORS请求默认不发送cookie和http认证信息，如果要发送，要在服务器端指Access-Control-Allow-Credentials: true,并且ajax请求必须打开withCredentials属性\r\n                                                            <pre>\r\n                                                                <Code source=\"\r\n                                                                    ```js\r\n                                                                    var xhr = new XMLHttpRequest();\r\n                                                                    xhr.withCredentials = true; \r\n                                                                    ```\r\n                                                                \"></Code>\r\n                                                            </pre>\r\n                                                        </li>\r\n                                                        <li>如果选择发送cookie,Access-Control-Allow-Origin字段不能设为*，必须指定明确的，与当前网页一致的域名</li>\r\n                                                    </ul>\r\n                                                </li>\r\n                                            </ol>\r\n                                        </li>\r\n                                    </ol>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                <h3>Sublime编辑器</h3>\r\n                                <p>beautiful 主题：seti-ui,material-ui </p>\r\n                                <p>sexy 字体：Comic Sans MS</p>\r\n                            </Timeline.Item>\r\n                        </Timeline>  \r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    This is my study note,welcome to comunicated with me , my wechat is \"kannihappy\"\r\n                </Footer>\r\n            </Layout>   \r\n        )\r\n    }\r\n}\r\nexport default  HtmlBasic;","import React,{Component } from 'react';\r\nimport Code from 'react-markdown';\r\nimport {\r\n    Layout,\r\n    Menu,\r\n    Icon,\r\n    Timeline\r\n} from 'antd';\r\nconst {\r\n    Header, Footer, Sider, Content,\r\n  } = Layout;\r\nclass  HtmlBasic extends Component {\r\n    render(){\r\n        return (\r\n            <Layout style={{marginLeft:200}}>\r\n                <Header style={{ background: '#fff', padding: 0,paddingLeft:20 ,fontSize:20,fontWeight:900}} >\r\n                    <h2> JS基础</h2>\r\n                </Header>\r\n                <Content style={{ margin: '24px 16px 0', overflow: 'inherit'}}>\r\n                <div style={{padding:24,backgroundColor:'#fff',height: ' calc(100vh - 160px)',overflowY:'auto'}}>\r\n                    <Timeline>\r\n                        <Timeline.Item>\r\n                            <h3></h3>\r\n                            <p></p>\r\n                        </Timeline.Item>\r\n                    </Timeline>      \r\n                </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    This is my study note,welcome to comunicated with me , my wechat is \"kannihappy\"\r\n                </Footer>\r\n            </Layout>   \r\n        )\r\n    }\r\n}\r\nexport default  HtmlBasic;","import React,{Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {  BrowserRouter as Router, Route, Link,Switch} from \"react-router-dom\";\nimport HtmlBasic from \"./components/HtmlBasic\";\nimport JsBasic from \"./components/JsBasic\";\nimport  './css/index.css';\nimport {\n    Layout,\n    Menu,\n    Icon\n} from 'antd';\nconst {\n    Header, Footer, Sider, Content,\n  } = Layout;\nclass App extends  Component  {\n    constructor(props){\n        super(props);\n        this.state = {\n            catalogue:[\n                \n            ]\n        }\n    }\n    render(){\n        return(\n            <Router basename=\"/blog\">\n                <Layout>\n                        <Sider \n                        style={{height:\"100vh\",position:\"fixed\",left:\"0\", overflow:'hidden'}\n                        }>\n                            <div className=\"logo\">\n                               天道酬勤\n                            </div>\n                            <Menu theme=\"dark\" mode=\"inline\">\n                                    <Menu.Item>\n                                        <Link to=\"/htmlbasic\"><Icon type=\"html5\" />HTML基础</Link>\n                                    </Menu.Item>\n                                    <Menu.Item>\n                                        <Link to=\"/jsbasic\"><span className=\"icon\">&#xec68;</span>JS基础</Link>\n                                    </Menu.Item>\n                            </Menu>\n                        </Sider>\n                        <Switch>\n                            <Route path=\"/htmlbasic\" component={HtmlBasic}/>\n                            <Route path=\"/jsbasic\" component={JsBasic}/>\n                        </Switch>\n                    </Layout>\n                </Router>\n                )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}